//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IcyMonitorServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IcyMonitorServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon icon_app {
            get {
                object obj = ResourceManager.GetObject("icon_app", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
        ///&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///
        ///&lt;head&gt;
        ///	&lt;meta content=&quot;text/html; charset=utf-8&quot; http-equiv=&quot;Content-Type&quot; /&gt;
        ///	&lt;title&gt;Computer Monitor&lt;/title&gt;
        ///	&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;/?res=jquery.js&quot;&gt;&lt;/script&gt;
        ///    &lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;/?res=jquery.flot.js&quot;&gt;&lt;/script&gt;
        ///	&lt;script language=&quot;javascript&quot; type=&quot;text/java [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * jQuery JavaScript Library v1.5.1
        /// * http://jquery.com/
        /// *
        /// * Copyright 2011, John Resig
        /// * Dual licensed under the MIT or GPL Version 2 licenses.
        /// * http://jquery.org/license
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// * Copyright 2011, The Dojo Foundation
        /// * Released under the MIT, BSD, and GPL Licenses.
        /// *
        /// * Date: Wed Feb 23 13:55:29 2011 -0500
        /// */
        ///(function( window, undefined ) {
        ///
        ///// Use the correct document accordingly with window argument (sandbox)
        ///var document = window. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery {
            get {
                return ResourceManager.GetString("jquery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! Javascript plotting library for jQuery, v. 0.7.
        /// *
        /// * Released under the MIT license by IOLA, December 2007.
        /// *
        /// */
        ///
        ///// first an inline dependency, jquery.colorhelpers.js, we inline it here
        ///// for convenience
        ///
        ////* Plugin for jQuery for working with colors.
        /// * 
        /// * Version 1.1.
        /// * 
        /// * Inspiration from jQuery color animation plugin by John Resig.
        /// *
        /// * Released under the MIT license by Ole Laursen, October 2009.
        /// *
        /// * Examples:
        /// *
        /// *   $.color.parse(&quot;#fff&quot;).scale(&apos;rgb&apos;, 0.25).add(&apos;a&apos;, -0. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_flot {
            get {
                return ResourceManager.GetString("jquery_flot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Plot data
        ///var data_temp = [], values_temp = [];
        ///var data_load = [], values_load = [];
        ///// Misc
        ///var loop = 0;
        ///var coreCount;
        ///var options = {series: {lines: { show: true }},
        ///				grid: { hoverable: true, autoHighlight: false },
        ///				yaxis: { min: 0, max: 100 },
        ///				xaxis: { min: 0, max: 130 }};
        ///
        ///$(function () {
        ///	// Setup CPU graphs
        ///	$.ajax({
        ///		url:      &apos;data?type=graph&apos;,
        ///		method:   &apos;GET&apos;,
        ///		dataType: &apos;json&apos;,
        ///		success:  function(json) {
        ///			coreCount = json.Temp.length;
        ///			for (var i = 0;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string main {
            get {
                return ResourceManager.GetString("main", resourceCulture);
            }
        }
    }
}
